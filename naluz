## Put comments here that give an overall description of what your
## functions do

## Write a short comment describing this function
## This function must do 4 things. Set the value of the matrix,
## get the value of the matrix, set the value of the inverse,
## and get the value of the inverse. 

makeCacheMatrix <- function(x = matrix()) {
      inv <- NULL
      set <- function(y) {
            x <<- y
            inv <<- NULL
      }
      get <- function() x
      setinverse <- function(inverse) inv <<- inverse
      getinverse <- function() inv
      list(set=set, get=get, setinverse=setinverse, getinverse=getinverse)
}


## Write a short comment describing this function
## This function will return the inverse of the matrix. It must first 
## see if the inverse has already been calculated, if it has, then it 
## will return the inverse, if not it will calculate it by setting the 
## cache in the getinverse function. 

cacheSolve <- function(x, ...) {
        ## Return a matrix that is the inverse of 'x'
      inv <- x$getinverse()
      if(!is.null(inv)) {
            message("retrieving data cache.")
            return(inv)
      }
      data <- x$get()
      inv <- solve(data)
      x$setinverse(inv)
      inv
}
